service: hara-watcher # NOTE: update this with your service name

custom:
  serverless-offline:
    babelOptions:
      presets: ["es2015"]
  webpackIncludeModules:
    webpackConfig: 'webpack.config.js'
    packager: 'npm'

plugins:
  - serverless-offline
  - serverless-offline-scheduler
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs6.10
  region: local
  stage: ${opt:stage, 'dev'}
  role: ${env:ROLE}
  tags:
    Namespace: hara-watcher
    # change the [service-name]
    Name: hara-watcher-[scan]-${self:provider.stage}
    Stage: ${self:provider.stage}
  # tags for all stacks generate by serverless, exp dynamodb, cloudwatch, etc
  # same with lambda tags
  stackTags:
    Namespace: hara-watcher
    # change the [service-name]
    Name: hara-watcher-[scan]-${self:provider.stage}
    Stage: ${self:provider.stage}
  environment:
    PRIV_NETWORK: http://ganache_priv:8546
    IS_DEV: true

package:
  exclude:
    - node_modules/dynamodb-localhost/**
    - node_modules/serverless-dynamodb-local/**
    - node_modules/serverless-offline/**
    - tests/**

functions:
  get_transactions:
    handler: handler._getTransactions
    timeout: 10
    events:
    - http:
        path: get_transactions
        method: get
  
  get_transactions_by_address:
    handler: handler._getTransactionsByAddress
    timeout: 10
    events:
    - http:
        path: get_transactions_by_address
        method: get

  get_blocks:
    handler: handler._getBlocks
    timeout: 10
    events:
    - http:
        path: get_blocks
        method: get
  
  get_detail_transaction:
    handler: handler._getDetailTransaction
    timeout: 10
    events:
    - http:
        path: get_detail_transaction
        method: get

resources:
  Resources:    
    hara_block:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: type
            AttributeType: S
          - AttributeName: hash
            AttributeType: S
          - AttributeName: from
            AttributeType: S
          - AttributeName: to
            AttributeType: S
        KeySchema:
          - AttributeName: type
            KeyType: HASH
          - AttributeName: hash
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: type_from
            KeySchema:
              - AttributeName: type
                KeyType: HASH
              - AttributeName: from
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: type_to
            KeySchema:
              - AttributeName: type
                KeyType: HASH
              - AttributeName: to
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: hara_block_${self:provider.stage}
